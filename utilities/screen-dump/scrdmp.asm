;scrdmp/asm: New screen driver routine.
;will write all output to screen to
;absolute disk sectors as well.
;

*GET	DOSCALLS

	ORG	0C000H
START	LD	HL,8000H
	LD	(401EH),HL
;move down.
	LD	HL,ST_CODE
	LD	DE,8000H
	LD	BC,EN_CODE-ST_CODE
	LDIR
;
	LD	HL,37ECH
	LD	(HL),0FEH
	LD	(HL),0D0H
;
	LD	A,1
	LD	(37E1H),A
	LD	BC,8000H
	CALL	ROM@PAUSE
	LD	A,0
	LD	(37ECH),A
	LD	B,10
	DJNZ	$
LOOP_1	LD	A,(37ECH)
	BIT	0,A
	JR	NZ,LOOP_1
	XOR	A
	LD	(37EDH),A
	JP	0E003H	;to disndata.
;
ST_CODE
	DI
	LD	A,(INGORE-OFFSET)
	OR	A
	JR	Z,ITS_OK
	DEC	A
	LD	(INGORE-OFFSET),A
	LD	A,C
	CALL	0458H
	CP	A
	RET
ITS_OK
	PUSH	BC
	OR	A
	CALL	0458H
	POP	BC
	LD	A,(NEXT-OFFSET)
	LD	L,A
	LD	H,81H
	LD	(HL),C
	INC	L
	LD	A,L
	LD	(NEXT-OFFSET),A
	LD	A,C
	CP	0DH
	JR	NZ,NOT_STOP
	LD	A,20
	LD	(INGORE-OFFSET),A
NOT_STOP
	LD	A,L
	OR	A
	LD	A,C
	LD	(BYTE-OFFSET),A
	JR	NZ,RETURN
;write sector to disk.
	LD	A,1
	LD	(37E1H),A
;
	LD	HL,37ECH
	LD	(HL),0D0H
	LD	BC,4000H
	CALL	ROM@PAUSE
LOOP_2	LD	A,(37ECH)
	BIT	1,A
	JR	Z,LOOP_2
	LD	BC,100H
	CALL	ROM@PAUSE
LOOP_3	LD	A,(37ECH)
	BIT	1,A
	JR	Z,LOOP_3
	LD	A,'1'
	LD	(3C40H),A
RETRY	LD	A,(SECTOR-OFFSET)
	LD	(37EEH),A
;
	LD	A,1
	LD	(37E1H),A
	LD	A,0D0H
	LD	(37ECH),A
	LD	B,10
	DJNZ	$
	LD	HL,37ECH
	LD	DE,8100H
	LD	(HL),0ACH
	LD	B,10
	DJNZ	$
LOOP_W
	LD	A,1
	LD	(37E1H),A
	BIT	0,(HL)
	JR	Z,RETRY
	BIT	1,(HL)
	JR	Z,LOOP_W
	LD	A,(DE)
	INC	DE
	LD	(37EFH),A
	LD	A,'W'
	LD	(3C40H),A
	DJNZ	LOOP_W
;
	LD	A,'2'
	LD	(3C40H),A
	LD	A,1
	LD	(37E1H),A
	LD	A,(SECTOR-OFFSET)
	INC	A
	LD	(SECTOR-OFFSET),A
	CP	10
	JR	Z,MORE
RETURN	LD	A,(BYTE-OFFSET)
	CP	A
	RET
MORE	XOR	A
	LD	(SECTOR-OFFSET),A
;step in.
	LD	A,'S'
	LD	(3FBFH),A
	LD	HL,37ECH
	LD	(HL),0D0H
	LD	B,10
	DJNZ	$
	LD	A,1
	LD	(37E1H),A
	LD	BC,8000H
	CALL	ROM@PAUSE
	LD	A,1
	LD	(37E1H),A
	LD	(HL),58H
	LD	B,10
	DJNZ	$
	LD	BC,8000H
	CALL	ROM@PAUSE
	LD	A,'3'
	LD	(3FBEH),A
	JR	RETURN
NEXT	DEFB	0
SECTOR	DEFB	0
BYTE	DEFB	0
INGORE	DEFB	0
OFFSET	EQU	ST_CODE-8000H
EN_CODE	NOP
;
	END	402DH
