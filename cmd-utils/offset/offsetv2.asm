;Offset23/asm: Offset Ver 2.03 (C) 23-Dec-84
; By Nick Andrew.
;
*GET	DOSCALLS
;
	ORG	5200H
	DEFS	256			; Low 256-byte stack
OFFSET	LD	SP,OFFSET-2
	CALL	SETUP
	CALL	SIGNON
	CALL	BCMD
	CALL	TAPE
	CALL	FILE2
	CALL	OPEN2
	CALL	ADVERT
BLOCK	CALL	READ1
	CP	2
	JP	Z,EXECUTE
	CP	5
	JR	NZ,LOAD
	CALL	READ1
	LD	B,A
SKIV01	CALL	READ1
	DJNZ	SKIV01
	JR	BLOCK
LOAD	CALL	READ1
	LD	(LENGTH),A
	CALL	READ2
	LD	(ADDRESS),HL
	LD	L,H
	LD	H,0
	LD	DE,USED
	ADD	HL,DE
	LD	(HL),255
	LD	DE,(ADDRESS)
	LD	A,(LENGTH)
	SUB	3
	ADD	A,E
	JR	NC,LOAV01
	INC	HL
	LD	(HL),255
LOAV01	LD	HL,(ADDRESS)
	LD	DE,5200H
	OR	A
	SBC	HL,DE
	JP	NC,COPY
	LD	HL,(ADDRESS)
	LD	A,(LENGTH)
	DEC	A
	DEC	A
	LD	B,0
	JR	NZ,LOAV02
	INC	B
LOAV02	LD	C,A
	ADD	HL,BC
	DEC	HL
	LD	DE,4000H
	OR	A
	SBC	HL,DE
	JP	C,COPY
	ADD	HL,DE
	LD	DE,5200H
	OR	A
	SBC	HL,DE
	JP	NC,COPY2ND
	LD	HL,(ADDRESS)
	LD	DE,4000H
	OR	A
	SBC	HL,DE
	JR	C,COPY1ST
	LD	A,1
	CALL	STORE
	LD	A,(LENGTH)
	CALL	STORE
	LD	HL,(ADDRESS)
	LD	A,L
	CALL	STORE
	LD	A,H
	CALL	STORE
	LD	A,(LENGTH)
	DEC	A
	DEC	A
	LD	B,A
LOAV03	CALL	READ1
	CALL	STORE
	DJNZ	LOAV03
	JP	BLOCK
COPY1ST	LD	A,1
	CALL	WRITE1
	LD	HL,(ADDRESS)
	LD	DE,4000H
	EX	DE,HL
	OR	A
	SBC	HL,DE
	LD	A,L
	INC	A
	INC	A
	CALL	WRITE1
	LD	B,L
	EX	DE,HL
	CALL	WRITE2
COP101	CALL	READ1
	CALL	WRITE1
	DJNZ	COP101
	LD	A,1
	CALL	STORE
	LD	HL,(ADDRESS)
	LD	A,(LENGTH)
	DEC	A
	DEC	A
	LD	DE,4000H
	LD	C,A
	LD	B,0
	JR	NZ,COP102
	INC	B
COP102	ADD	HL,BC
	OR	A
	SBC	HL,DE
	LD	A,L
	INC	A
	INC	A
	CALL	STORE
	LD	B,L
	LD	HL,4000H
	LD	A,L
	CALL	STORE
	LD	A,H
	CALL	STORE
	JR	LOAV03
COPY2ND	LD	A,1
	CALL	STORE
	LD	HL,(ADDRESS)
	LD	DE,5200H
	EX	DE,HL
	OR	A
	SBC	HL,DE
	LD	A,L
	INC	A
	INC	A
	LD	B,L
	CALL	STORE
	LD	HL,(ADDRESS)
	LD	A,L
	CALL	STORE
	LD	A,H
	CALL	STORE
COP201	CALL	READ1
	CALL	STORE
	DJNZ	COP201
	LD	A,1
	CALL	WRITE1
	LD	HL,(ADDRESS)
	LD	A,(LENGTH)
	DEC	A
	DEC	A
	LD	B,0
	LD	C,A
	JR	NZ,COP202
	INC	B
COP202	LD	DE,5200H
	ADD	HL,BC
	OR	A
	SBC	HL,DE
	LD	A,L
	INC	A
	INC	A
	LD	B,L
	CALL	WRITE1
	LD	HL,5200H
	CALL	WRITE2
	JR	COPY01
COPY	LD	A,1
	CALL	WRITE1
	LD	A,(LENGTH)
	LD	B,A
	CALL	WRITE1
	DEC	B
	DEC	B
	LD	HL,(ADDRESS)
	CALL	WRITE2
COPY01	CALL	READ1
	CALL	WRITE1
	DJNZ	COPY01
	JP	BLOCK
EXECUTE	CALL	READ1
	CALL	READ2
	LD	(EXEC),HL
	LD	HL,USED+52H
	LD	B,9CH
EXECV01	LD	C,19
EXECV02	LD	A,(HL)
	INC	HL
	DJNZ	EXECV03
	CALL	NOFREE
	CALL	CLOSE2
	JP	DOS
EXECV03	OR	A
	JR	NZ,EXECV01
	DEC	C
	JR	NZ,EXECV02
	LD	A,0DBH
	SUB	B
	LD	H,A
	LD	L,0
	LD	(NEWORG),HL
	LD	(NEWORG2),HL
	LD	B,36
	LD	HL,DATA
EXECV04	LD	A,(HL)
	INC	HL
	CALL	STORE
	DJNZ	EXECV04
	LD	HL,(NEWORG)
	LD	DE,4000H
	OR	A
	SBC	HL,DE
	CALL	ORGOFF
	LD	DE,TABLE
	OR	A
	SBC	HL,DE
	PUSH	HL
	POP	BC
	EX	DE,HL
EXECV05	LD	A,(HL)
	CALL	WRITE1
	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,EXECV05
	CALL	CLOSE2
	JP	DOS
;OFFSET3/EDT: SUBROUTINES FOR OFFSET2/EDT
SIGNON	LD	HL,M_SIGN
MESSAGE	CALL	MESS_DO
	RET
M_SIGN	DEFM	'OFFSET VERSION 2.03 (C) 1983,84',0AH
	DEFM	'Special Model III Version',0AH
	DEFM	'By Zeta Microcomputer Software.',0DH
ADVERT	LD	HL,M_ADV
	LD	BC,256
	XOR	A
	CPIR
	RET	NZ
	LD	DE,M_ADV
	OR	A
	SBC	HL,DE
	LD	B,L
	EX	DE,HL
	LD	A,5
	CALL	WRITE1
	LD	A,B
	CALL	WRITE1
ADVV01	LD	A,(HL)
	INC	HL
	CALL	WRITE1
	DJNZ	ADVV01
	RET
M_ADV	DEFB	1CH
	DEFB	1FH
	DEFM	'BUY ALL YOUR UTILITIES FROM:'
	DEFB	0DH
	DEFM	'ZETA MICROCOMPUTER SOFTWARE ...'
	DEFB	0DH
	DEFM	'P.O BOX 177 RIVERSTONE NSW 2765'
	DEFB	0DH
	DEFM	'THIS PROGRAM MODIFIED USING "OFFSET"'
	DEFB	0DH
	DEFM	'(C) 1983, ZETA MICROCOMPUTER SOFTWARE.'
	DEFB	0DH
	DEFB	0
BCMD	LD	HL,COM_BUFF
BCMV01	LD	A,(HL)
	CP	30H
	INC	HL
	JR	NC,BCMV01
	CP	20H
	RET	NZ
BCMV02	LD	A,(HL)
	CP	20H
	INC	HL
	JR	Z,BCMV02
	DEC	HL
	RET
CLOSE2	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,FCB1
	CALL	DOS_CLOSE
	JP	NZ,DOS_ERROR
	LD	DE,FCB2
	CALL	DOS_CLOSE
	JP	NZ,DOS_ERROR
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET
FILE2	LD	DE,FCB1
	PUSH	HL
	CALL	DOS_EXTRACT
	LD	DE,FCB1
	LD	HL,EXT1
	CALL	DOS_EXTEND
	POP	HL
	LD	DE,FCB2
	CALL	DOS_EXTRACT
	LD	DE,FCB2
	LD	HL,EXT2
	CALL	DOS_EXTEND
	RET
NOFREE	LD	HL,M_NFREE
	JP	MESSAGE
M_NFREE	DEFM	'NO AVAILABLE MEMORY FOR OFFSET'
	DEFB	0AH
	DEFM	'OFFSET ABORTED...'
	DEFB	0DH
OPEN2	LD	DE,FCB1
	LD	HL,BUFFER1
	LD	B,0
	CALL	DOS_OPEN_EX
	JP	NZ,DOS_ERROR
	LD	DE,FCB2
	LD	HL,BUFFER2
	LD	B,0
	CALL	DOS_OPEN_NEW
	JP	NZ,DOS_ERROR
	RET
ORGOFF	EX	DE,HL
	LD	HL,TABLE
ORGV01	LD	A,(HL)
	INC	HL
	CP	2
	JR	NZ,ORGV02
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	DEC	HL
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	RET
ORGV02	PUSH	DE
	LD	A,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	DEC	HL
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	POP	DE
	DEC	A
	DEC	A
	LD	B,A
ORGV03	INC	HL
	DJNZ	ORGV03
	JR	ORGV01
READ1	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,FCB1
	CALL	$GET
	JP	NZ,DOS_ERROR
	POP	HL
	POP	DE
	POP	BC
	RET
READ2	PUSH	AF
	CALL	READ1
	LD	L,A
	CALL	READ1
	LD	H,A
	POP	AF
	RET
SETUP	XOR	A
	LD	(LENGTH),A
	LD	HL,0
	LD	(ADDRESS),HL
	LD	(EXEC),HL
	LD	(NEWORG),HL
	LD	(NEWORG2),HL
	LD	HL,ZZ9
	LD	(STPOSN),HL
	LD	HL,FCB1
	LD	DE,FCB1+1
	LD	BC,31
	XOR	A
	LD	(HL),A
	LDIR
	LD	HL,FCB2
	LD	DE,FCB2+1
	LD	BC,31
	LD	(HL),A
	LDIR
	LD	HL,BUFFER1
	LD	DE,BUFFER1+1
	LD	BC,255
	LD	(HL),A
	LDIR
	LD	HL,BUFFER2
	LD	DE,BUFFER2+1
	LD	BC,255
	LD	(HL),A
	LDIR
	LD	HL,USED
	LD	DE,USED+1
	LD	BC,255
	LD	(HL),A
	LDIR
	RET
STORE	PUSH	HL
	LD	HL,(STPOSN)
	LD	(HL),A
	INC	HL
	LD	(STPOSN),HL
	POP	HL
	RET
WRITE1	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,FCB2
	CALL	$PUT
	JP	NZ,DOS_ERROR
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET
WRITE2	PUSH	AF
	LD	A,L
	CALL	WRITE1
	LD	A,H
	CALL	WRITE1
	POP	AF
	RET
;
TON	EQU	0212H
TOFF	EQU	01F8H
READ	EQU	0235H
;
TAPE	LD	A,(HL)
	CP	'%'
	IFDEF	MODEL3
	RET
	ELSE
	RET	NZ
	ENDIF
;
	INC	HL
	PUSH	HL
WRMSTRT	DI
	XOR	A
	CALL	TON
	CALL	0293H	;READ LEADER
	LD	HL,ZZ9+1
	CALL	READ
	CP	55H
	JR	NZ,NONSYS
	LD	B,6
TAPV01	PUSH	BC
	CALL	READ
	POP	BC
	DJNZ	TAPV01
FLSH	CALL	022CH
	CALL	READ
	CP	78H
	JP	Z,ENTADD
	CP	3CH
	JP	Z,TLOAD
TERROR	LD	HL,M_TERR
MKBD	CALL	MESS_DO
	JP	KBD
NONSYS	LD	HL,M_NSYS
	JR	MKBD
M_TERR	DEFM	'TAPE READING ERROR!!!'
	DEFB	0DH
M_NSYS	DEFM	'NOT A SYSTEM TAPE!!!!'
	DEFB	0DH
M_CKSM	DEFM	'CHECKSUM ERROR ON TAPE!!!'
	DEFB	0DH
M_KBD	DEFM	'HIT <ENTER> TO REREAD TAPE,   OR'
	DEFB	0AH
	DEFM	'   <ESCAPE> TO RETURN TO DOS.'
	DEFB	0DH
KBD	LD	HL,M_KBD
	CALL	MESS_DO
	CALL	TOFF
	EI
	CALL	DELAY
RDKBD	CALL	0049H
	CALL	DELAY
	CP	'['
	JP	Z,DOS
	CP	0DH
	JR	NZ,RDKBD
	JP	WRMSTRT
DELAY	PUSH	AF
	LD	BC,8000H
	CALL	0060H
	POP	AF
	RET
TLOAD	LD	A,1
	LD	(HL),A
	INC	HL
	CALL	READ
	LD	B,A
	INC	A
	INC	A
	LD	(HL),A
	INC	HL
	CALL	READ
	LD	(HL),A
	INC	HL
	LD	C,A
	CALL	READ
	LD	(HL),A
	INC	HL
	ADD	A,C
	LD	C,A
TLOV01	CALL	READ
	LD	(HL),A
	INC	HL
	ADD	A,C
	LD	C,A
	DJNZ	TLOV01
	CALL	READ
	CP	C
	JP	Z,FLSH
	LD	HL,M_CKSM
	JP	MKBD
ENTADD	LD	A,2
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	CALL	READ
	LD	(HL),A
	INC	HL
	CALL	READ
	LD	(HL),A
	INC	HL
	LD	(HL),0
	PUSH	HL
	PUSH	HL
	CALL	TOFF
	POP	DE
	INC	DE
	LD	BC,256
	LDIR
	POP	HL
	LD	DE,ZZ9+1
	OR	A
	SBC	HL,DE
	INC	H
	LD	B,H
	POP	HL
	PUSH	HL
	PUSH	BC
	LD	DE,FCB1
	CALL	DOS_EXTRACT
	LD	DE,FCB1
	LD	HL,EXT1
	CALL	DOS_EXTEND
	LD	DE,FCB1
	LD	HL,BUFFER1
	LD	B,0
	CALL	DOS_OPEN_NEW
	LD	HL,ZZ9+1
	POP	BC
ENTV01	PUSH	BC
	LD	DE,BUFFER1
	LD	BC,256
	LDIR
	LD	DE,FCB1
	CALL	DOS_WRIT_SECT
	JP	NZ,DOS_ERROR
	POP	BC
	DJNZ	ENTV01
	LD	DE,FCB1
	CALL	DOS_CLOSE
	POP	HL
	EI
	RET
DATA	DEFB	1
	DEFB	29
	DEFW	5200H
	DI
	LD	HL,0000H
NEWORG	EQU	$-2
	LD	SP,0000H
NEWORG2	EQU	$-2
	INC	SP
	INC	SP
	LD	DE,4000H
	LD	BC,1200H
	LDIR
	LD	HL,0000H
EXEC	EQU	$-2
	IFDEF	MODEL1
	LD	(40DFH),HL
	PUSH	HL
	JP	41E2H
	ELSE
	JP	(HL)
	DC	6,0
	ENDIF
	DEFB	2
	DEFB	2
	DEFW	5200H
	DEFB	0
LENGTH	DEFB	0
ADDRESS	DEFW	0
STPOSN	DEFW	0
EXT1	DEFM	'ORI'
EXT2	DEFM	'CMD'
FCB1	DEFS	32
FCB2	DEFS	32
BUFFER1	DEFS	256
BUFFER2	DEFS	256
USED	DEFS	256
TABLE	DEFB	1
	DEFB	2
	DEFW	4000H
ZZ6	DEFS	256
	DEFB	1
	DEFB	2
	DEFW	4100H
ZZ7	DEFS	256
	DEFB	1
	IFDEF	MODEL3
	DEFB	02H
	ELSE
	DEFB	0EBH
	ENDIF
	DEFW	4200H
	IFDEF	MODEL1
ZZ8	DEFS	0E9H
	ELSE
ZZ8	DEFS	256
	ENDIF
ZZ9	DEFB	0
	END	OFFSET
