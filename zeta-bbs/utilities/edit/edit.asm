;EDIT: Trs-80 Lisp editor modified for Zeta.
;Zeta RTRS Version...
*GET	DOSCALLS
*GET	EXTERNAL
*GET	ASCII
;
;
	ORG	PROG_START
	DEFW	BASE
	DEFW	THIS_PROG_END
	DEFW	0
	DEFW	0
;End of program load info.
;
	COM	'<EDIT 1.2  13-Jun-86>'
;
	ORG	BASE+100H
ENDSTK	EQU	$
*GET	BBOPEN	;BB file ownership routine.
;
START
	LD	SP,ENDSTK
	LD	HL,M_1
	CALL	MESS_0_VDU
	LD	HL,M_2
	CALL	MESS_0_VDU
	LD	HL,TEXT_BUF
	LD	(HL),1AH
	LD	(ENDBUF),HL
	LD	(CUR_POS),HL
COMMAND
	LD	HL,0
	LD	(LINE_1),HL
	LD	(LINE_2),HL
	XOR	A
	LD	(MODE),A
	LD	A,'>'
	CALL	0033H
	LD	HL,IN_BUF
	LD	B,60
	CALL	40H
	JP	C,COMMAND
;
	LD	A,(HL)
	CP	'#'
	JR	NZ,NOT_HASH
	LD	A,1
	LD	(MODE),A
	INC	HL
	LD	A,(HL)
NOT_HASH
	LD	A,(HL)
	CP	'0'
	JP	C,CMD_LETTER
	CP	'9'+1
	JP	NC,CMD_LETTER
	CALL	GET_NUMB
	LD	(LINE_1),DE
	LD	A,(HL)
	CP	','
	JP	NZ,CMD_LETTER
	INC	HL
	LD	A,(HL)
	CP	'0'
	JP	C,CMD_BAD
	CP	'9'+1
	JP	NC,CMD_BAD
	CALL	GET_NUMB
	LD	(LINE_2),DE
	INC	HL
	JP	CMD_LETTER
;
CMD_LETTER
	INC	HL
	LD	(BUF_POS),HL
	PUSH	AF
	LD	HL,(LINE_1)
	LD	A,H
	OR	L
	JR	NZ,REP_N
	INC	HL
	LD	(LINE_1),HL
REP_N	PUSH	HL
	POP	BC
	POP	AF
;
NOT_NUMB	CP	'A'
	JR	C,IS_LOWER
	AND	5FH	;to upper.
IS_LOWER
	CP	'R'
	JP	Z,CMD_READ
	CP	'W'
	JP	Z,CMD_WRITE
	CP	'I'
	JP	Z,CMD_INS
	CP	'E'
	JP	Z,CMD_END
	CP	'B'
	JP	Z,CMD_BEGIN
	CP	'D'
	JP	Z,CMD_DOWN
	CP	'T'
	JP	Z,CMD_TYPE
	CP	'U'
	JP	Z,CMD_UP
	CP	'Q'
	JP	Z,CMD_QUIT
	CP	'K'
	JP	Z,CMD_KILL
	CP	'I'
	JP	NZ,CMD_BAD
CMD_INS	XOR	A
	LD	(LIN_LEN),A
;;	CALL	GET_CH
	LD	HL,IN_BUF
	LD	B,80
	CALL	40H
	JP	C,COMMAND
	LD	A,(HL)
	CP	CR
	JP	Z,COMMAND
;;	LD	A,(LIN_LEN)
;;	LD	C,A
	INC	B
	LD	C,B
	LD	B,0
	PUSH	BC
	LD	HL,(ENDBUF)
	ADD	HL,BC
	EX	DE,HL
	LD	HL,(ENDBUF)
	LD	BC,(CUR_POS)
	OR	A
	SBC	HL,BC
	LD	B,H
	LD	C,L
	INC	BC
	LD	HL,(ENDBUF)
	LD	(ENDBUF),DE
	LDDR
	POP	BC
	LD	HL,IN_BUF
	LD	DE,(CUR_POS)
	LDIR
	LD	(CUR_POS),DE
	JR	CMD_INS
;
CMD_KILL
	LD	HL,(CUR_POS)
LOOP_1	CALL	END_LINE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,LOOP_1
	EX	DE,HL
	LD	HL,(ENDBUF)
	SCF
	CCF
	SBC	HL,DE
	LD	A,H
	OR	L
	JP	Z,H70E1
	LD	B,H
	LD	C,L
	EX	DE,HL
	LD	DE,(CUR_POS)
	LDIR
	LD	A,1AH
	LD	(DE),A
	LD	(ENDBUF),DE
	JP	COMMAND
H70E1	LD	HL,(CUR_POS)
	LD	(HL),1AH
	LD	(ENDBUF),HL
	JP	COMMAND
;
CMD_END
	LD	HL,(ENDBUF)
	LD	(CUR_POS),HL
	JP	COMMAND
;
CMD_BEGIN
	LD	HL,TEXT_BUF
	LD	(CUR_POS),HL
	LD	BC,0001H
	JP	H712C
;
CMD_DOWN
	LD	HL,(CUR_POS)
H7113	CALL	END_LINE
	LD	(CUR_POS),HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,H7113
	LD	BC,0001H
	JP	H712C
;
CMD_TYPE
	LD	HL,(CUR_POS)
H712C	CALL	PR_MESS
	CP	1AH
	JP	Z,COMMAND
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,H712C
	JP	COMMAND
;
CMD_UP
	LD	HL,(CUR_POS)
H7144	CALL	ST_LINE
	LD	(CUR_POS),HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,H7144
	LD	BC,0001H
	JR	H712C
;
CMD_FIND
	LD	HL,(CUR_POS)
H715C	PUSH	HL
	LD	DE,IN_BUF+2
H7160	LD	A,(HL)
	CP	1AH
	JR	Z,H7175
	LD	A,(DE)
	CP	CR
	JR	Z,H7184
	CP	(HL)
	INC	HL
	JR	NZ,H7171
	INC	DE
	JR	H7160
H7171	POP	HL
	INC	HL
	JR	H715C
H7175	LD	A,(DE)
	CP	CR
	JR	Z,H7184
	POP	HL
	LD	HL,M_NSTR
	CALL	MESS_0_VDU
	JP	COMMAND
H7184	CALL	ST_LINE
	LD	(CUR_POS),HL
	POP	BC
	LD	BC,0001H
	JP	H712C
;
CMD_QUIT
	LD	A,0
	JP	TERMINATE
;
CMD_WRITE
	LD	HL,(BUF_POS)
CW_1	LD	A,(HL)
	CP	' '
	JR	NZ,H71DB
	INC	HL
	JR	CW_1
H71DB	LD	DE,FCB_1	;Write to disk.
	DEC	HL
H71DE	INC	HL
	LD	A,(HL)
	LD	(DE),A
	CP	CR
	INC	DE
	JR	NZ,H71DE
	XOR	A
	LD	(LIN_LEN),A
	LD	HL,IN_BUF
	LD	DE,FCB_1
	LD	B,0
	LD	C,0	;New.
	CALL	BB_OPEN
	JR	NZ,ERROR
	LD	HL,TEXT_BUF
WRT_LP
	LD	A,(HL)
	CP	1AH
	JR	Z,HAAAC
	CALL	$PUT
	JR	NZ,ERROR
	INC	HL
	JR	WRT_LP
HAAAC	LD	DE,FCB_1
	CALL	DOS_CLOSE
	JP	Z,COMMAND
ERROR	OR	80H
	CALL	DOS_ERROR
	LD	HL,M_DERR
	CALL	MESS_0_VDU
	JP	COMMAND
CMD_BAD	LD	HL,M_BCMD
	CALL	MESS_0_VDU
	JP	COMMAND
;
CMD_READ
	LD	HL,(BUF_POS)
	LD	A,(HL)
	CP	CR
	JR	NZ,H7282
	JP	CMD_BAD
H7282	LD	DE,FCB_1
H7285	INC	HL
	LD	A,(HL)
	LD	(DE),A
	CP	CR
	INC	DE
	JR	NZ,H7285
	XOR	A
	LD	(LIN_LEN),A
	LD	HL,IN_BUF
	LD	DE,FCB_1
	LD	B,0
	LD	C,1	;Existing
	CALL	BB_OPEN
	JR	NZ,ERROR
	LD	HL,(ENDBUF)
RD_LP
	LD	DE,FCB_1
	CALL	$GET
	JR	NZ,H72B6
	LD	(HL),A
	INC	HL
	JR	RD_LP
H72B6	CP	1CH
	JR	Z,END_READ
	CP	1DH
	JR	Z,END_READ
	JP	ERROR
END_READ
	LD	(HL),1AH
	LD	DE,FCB_1
	CALL	DOS_CLOSE
	JP	NZ,ERROR
	LD	HL,TEXT_BUF
H72C7
	LD	A,(HL)
	INC	HL
	CP	1AH
	JR	NZ,H72C7
	DEC	HL
	LD	(ENDBUF),HL
	JP	COMMAND
;
PR_MESS	LD	A,(HL)
	CP	1AH
	RET	Z
	INC	HL
	PUSH	AF
	CALL	0033H
	POP	AF
	CP	CR
	JR	NZ,PR_MESS
	RET
;
END_LINE	LD	A,(HL)
	CP	1AH
	RET	Z
	INC	HL
	CP	CR
	RET	Z
	JR	END_LINE
;
ST_LINE	DEC	HL
	LD	A,(HL)
	CP	1AH
	JR	Z,H7320
H7316	DEC	HL
	LD	A,(HL)
	CP	CR
	JR	Z,H7320
	CP	1AH
	JR	NZ,H7316
H7320	INC	HL
	RET
;
GET_NUMB
	LD	DE,0
GN_1
	LD	A,(HL)
	CP	'0'
	RET	C
	CP	'9'+1
	RET	NC
	INC	HL
	SUB	'0'
	PUSH	HL
	PUSH	DE
	POP	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,HL
	LD	E,A
	LD	D,0
	ADD	HL,DE
	PUSH	HL
	POP	DE
	POP	HL
	JR	GN_1
;
LINE_1	DEFW	0
LINE_2	DEFW	0
ENDBUF	DEFW	0
CUR_POS	DEFW	0
F_PMT	DEFB	0
M_BCMD
	DEFM	'(Insert,Kill,Beg,End,Read,Write,Type,Quit,Up,Down,Find)',CR,0
BUF_POS	DEFW	IN_BUF
LIN_LEN	DEFB	0
IN_BUF	DEFS	256
M_1	DEFM	'Simpleton editor.....',CR,0
M_2	DEFM	'Modified for Zeta Rtrs 13-Jun-86.',CR,0
M_NSTR	DEFM	'String not found',CR,0
M_DERR	DEFM	'Disk Error - Sorry!',CR,0
MODE	DEFB	0
FCB_1	DEFS	32
	DEFB	1AH	;1 before TEXT_BUF
TEXT_BUF	DEFB	0
;
	DEFS	1024	;not correct!
THIS_PROG_END	EQU	$
;
	END	START
