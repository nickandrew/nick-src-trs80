;dir.asm: Do a disk directory (newdos)
;
SEP	EQU	'.'	;Not slash!
;
*GET	DOSCALLS
*GET	EXTERNAL
*GET	ASCII
;
	COM	'<Dir 1.1c 12-Jan-88>'
;
	ORG	PROG_START
	DEFW	BASE
	DEFW	THIS_PROG_END
	DEFW	TERMINATE
	DEFW	TERMINATE
;End of program load info.
;
	ORG	BASE+100H
START	LD	SP,START
	LD	IY,4380H
	CALL	PUTCR
	JR	ACT		;bypass other stuff.
ACM	LD	A,0H
ACN	EQU	$-1
ACO	LD	(ACN),A
ACP	CALL	492FH
	RET	Z
	JR	EXIT
;
USAGE_ERR
	LD	HL,M_USAGE
	CALL	MESS
	LD	A,0
	JP	TERMINATE
EXIT
	OR	A
	JP	Z,TERMINATE
	CP	20H		;illegal
	JP	Z,TERMINATE
	PUSH	AF
	OR	80H
	CALL	DOS_ERROR
	POP	AF
	JP	TERMINATE
;
;
ACT	LD	A,(43A0H)
	LD	C,A
	LD	B,0H
	LD	A,(HL)
	CP	':'
	JR	NZ,ACV
	INC	HL
ACV	LD	A,(HL)
	SUB	'0'
	CP	10
	JR	NC,ADA
ACW	LD	C,A
	INC	HL
	LD	A,(HL)
	SUB	'0'
	CP	0AH
	JR	NC,ACZ
	LD	E,A
	LD	A,C
	LD	D,9H
ACX	ADD	A,C
	JR	C,ACY
	DEC	D
	JR	NZ,ACX
	ADD	A,E
	JR	NC,ACW
ACY	LD	A,20H		;illegal drive
	JR	EXIT		;no error for this.
ACZ	CALL	4CD5H
	JR	C,USAGE_ERR
ADA	LD	A,(HL)
	INC	HL
	CP	CR
	JR	Z,ADI
	CP	SEP
	JR	Z,IS_SEP
	CP	'*'			;Ignore *.*
	JR	Z,ADI
	AND	5FH			;To u/c
	CP	'A'
	JR	NZ,NOT_A
	SET	00H,B
	JR	ACZ
NOT_A	CP	'S'
	JR	NZ,NOT_S
	SET	01H,B
	JR	ACZ
NOT_S	CP	'I'
	JR	NZ,NOT_I
	SET	02H,B
	JR	ACZ
NOT_I	CP	'U'
	JR	NZ,NOT_U
	SET	05H,B
	JR	ACZ
NOT_U	CP	SEP
	JP	NZ,USAGE_ERR
IS_SEP	SET	04H,B
	PUSH	BC
	LD	B,3
	LD	DE,ADM
ADF	LD	A,(HL)
	SUB	'0'
	CP	0AH
	JR	C,ADG		;If numeric
	SUB	11H
	CP	1AH
	JR	NC,ADH		;If not alphabetic
ADG	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	HL
	DJNZ	ADF
ADH	POP	BC
	JR	ACZ
;
ADI
ADL	CALL	TITLE
	JP	NZ,EXIT
	XOR	A
	CALL	ACO
	CALL	PUTCR
	LD	D,0DH
	CALL	PRT_COL_HDG
	PUSH	DE
	LD	C,5
	JP	AEH
ADN	PUSH	DE
	PUSH	BC
	PUSH	HL
	EX	DE,HL
	LD	HL,AHK
	LD	B,11
	PUSH	HL
ADO	LD	(HL),'.'
	INC	HL
	DJNZ	ADO
	LD	A,(DE)
	AND	7H
	ADD	A,'0'
	LD	(HL),A
	POP	HL
	LD	A,(DE)
	BIT	06H,A
	JR	Z,ADP
	LD	(HL),'S'
ADP	INC	HL
	BIT	03H,A
	JR	Z,ADR
	LD	(HL),'I'
ADR	INC	HL
	INC	DE
	LD	A,(DE)
	BIT	05H,A
	JR	Z,ADS
	LD	(HL),'U'
ADS	INC	HL
	BIT	07H,A
	JR	Z,ADT
	LD	(HL),'E'
ADT	INC	HL
	BIT	06H,A
	JR	Z,ADU
	LD	(HL),'C'
ADU	LD	HL,4H
	ADD	HL,DE
	LD	C,0FH
	LD	B,8H
	CALL	AFK
	LD	A,(HL)
	CP	20H
	LD	A,SEP
	CALL	NZ,AFL
	LD	B,3H
	CALL	AFK
	LD	B,C
	CALL	SPACES
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	HL,4296H	;Check pwds.
	RST	18H
	JR	Z,ADV
	LD	A,'A'
	LD	(AHO),A
ADV	POP	DE
	RST	18H
	JR	Z,ADW
	LD	A,'U'
	LD	(AHN),A
ADW	POP	HL
	POP	BC
	BIT	00H,B
	JP	Z,AEF
	LD	C,1H
	PUSH	BC
	PUSH	HL
	INC	HL
	INC	HL
	INC	HL
	LD	E,(HL)
	LD	D,0H
	INC	HL
	LD	B,D
	LD	C,(HL)
	SET	04H,L
	LD	A,(HL)
	INC	HL
	PUSH	HL
	LD	H,(HL)
	LD	L,A
	LD	A,E
	OR	A
	JR	Z,ADX
	DEC	HL
ADX	INC	C
	DEC	C
	JR	NZ,ADY
	LD	B,1H
ADY	PUSH	DE
	PUSH	HL
	PUSH	BC
	JR	NZ,ADZ
	LD	E,L
	LD	L,H
	LD	H,D
ADZ	CALL	NZ,AFO
	OR	A
	JR	Z,AEA
	INC	E
	JR	NZ,AEA
	INC	HL
AEA	LD	A,H
	LD	B,L
	LD	C,E
	LD	HL,AHF
	LD	DE,AFZ
	CALL	AFV
	POP	BC
	LD	HL,AHD
	CALL	AFS
	POP	BC
	LD	HL,AHA
	LD	DE,AGA
	CALL	AFU
	LD	(HL),'0'
	POP	BC
	PUSH	HL
	CALL	AFS
	POP	HL
	LD	(HL),'/'
	POP	HL
	INC	HL
	LD	BC,0H
	LD	D,B
	LD	E,C
AEB	LD	A,(HL)
	CP	0FEH
	INC	HL
	JR	NC,AED
	INC	DE
	LD	A,(HL)
	AND	1FH
	INC	HL
	INC	A
	ADD	A,C
	LD	C,A
	JR	NC,AEC
	INC	B
AEC	BIT	04H,L
	JR	NZ,AEB
	LD	A,2CH		;bad dir data
	JP	EXIT
AED	JR	NZ,AEE
	LD	A,(HL)
	CALL	ACP
	ADD	A,16H
	LD	L,A
	JR	AEB
AEE	CALL	ACM
	PUSH	DE
	LD	HL,AHI
	CALL	AFT
	POP	BC
	LD	HL,AHJ
	CALL	AFS
	LD	HL,AHA
	CALL	MESS
	POP	HL
	POP	BC
AEF	LD	A,L
	ADD	A,20H
	LD	L,A
	JR	NC,AEH
	LD	A,(ACN)
	AND	1FH
	INC	A
	CP	0H
AEG	EQU	$-1
	JR	Z,AES
	CALL	ACO
AEH	LD	A,(HL)
	AND	90H
	CP	10H
	JR	NZ,AEF
	LD	A,B
	AND	30H
	JR	NZ,AEK
	BIT	06H,(HL)
	JR	Z,AEI
	BIT	01H,B
	JR	AEJ
AEI	BIT	03H,(HL)
	JR	Z,AEK
	BIT	02H,B
AEJ	JP	Z,AEF
AEK	BIT	04H,B
	JR	Z,AEN
	PUSH	HL
	PUSH	BC
	LD	DE,0DH
	ADD	HL,DE
	LD	DE,ADM
	LD	B,3H
AEL	LD	A,(DE)
	CP	(HL)
	INC	DE
	INC	HL
	JR	NZ,AEM
	DJNZ	AEL
AEM	POP	BC
	POP	HL
	JR	NZ,AEF
AEN	BIT	05H,B
	JR	Z,AEO
	INC	HL
	BIT	05H,(HL)
	DEC	HL
	JR	Z,AEF
AEO	POP	DE
	DEC	C
	JR	NZ,AEP
	LD	C,4H
	CALL	PUTCR
	DEC	D
	JR	NZ,AEP
	LD	D,0FH
	CALL	PAUSE
	CALL	PRT_COL_HDG
AEP	JP	ADN
;
AES	CALL	PUTCR
	POP	AF
	CP	4H
	CALL	C,PAUSE
AET
	CALL	PUTCR
	XOR	A
	JP	EXIT
PRT_COL_HDG	BIT	00H,B
	RET	Z
	PUSH	HL
	PUSH	BC
	DEC	D
	LD	B,20
	CALL	SPACES
	LD	HL,COL_HDG
	CALL	MESS
	POP	BC
	POP	HL
	RET	
TITLE	LD	A,C
	CALL	47ECH
	RET	NZ
	PUSH	BC
	LD	B,0H
	LD	HL,AGM
	CALL	AFS
	LD	A,(430DH)
	LD	C,A
	LD	B,0H
	LD	HL,D_TKS
	CALL	AFS
	XOR	A
	CALL	490AH
	JR	NZ,AFC
	LD	BC,0H
AEW	LD	E,(IY-71H)
	LD	A,(HL)
	INC	HL
AEX	RRCA	
	JR	C,AEY
	INC	BC
AEY	DEC	E
	JR	NZ,AEX
	LD	A,L
	CP	(IY-75H)
	JR	C,AEW
	LD	HL,D_GRN
	CALL	AFT
	LD	HL,42D0H
	LD	DE,D_NAME
	LD	BC,8H
	LDIR	
	LD	DE,D_DATE
	LD	C,8H
	LDIR	
	LD	A,1H
	CALL	490AH
	JR	NZ,AFC
AEZ	LD	A,(421FH)
	ADD	A,8H
	LD	E,A
	LD	(AEG),A
AFA	LD	A,(HL)
	OR	A
	INC	HL
	JR	NZ,AFB
	INC	BC
AFB	DEC	E
	JR	NZ,AFA
	LD	A,L
	ADD	A,1FH
	AND	0E0H
	LD	L,A
	JR	NZ,AEZ
	LD	HL,D_FDS
	CALL	AFS
	LD	HL,AGL
	CALL	MESS
	XOR	A
AFC	POP	BC
	RET	
PAUSE	BIT	05H,(IY-17H)	;ret if chaining
	RET	NZ
	RET			;force no pause.
;
PUTCR
	LD	A,CR
	JR	PUTC
;
MESS	PUSH	DE
	LD	DE,DCB_2O
	CALL	MESS_0
	POP	DE
	RET
;
SPACES	LD	A,20H
	CALL	PUTC
	DJNZ	SPACES
	RET	
AFK	LD	A,(HL)
	CP	20H
	INC	HL
	CALL	NZ,AFL
	DJNZ	AFK
	RET	
AFL	DEC	C
PUTC	PUSH	DE
	PUSH	AF
	LD	DE,DCB_2O
	CALL	$PUT
	POP	AF
	POP	DE
	RET	
AFO	LD	B,18H
	XOR	A
AFP	SLA	E
	ADC	HL,HL
	RLA	
	JR	C,AFQ
	CP	C
	JR	C,AFR
AFQ	SUB	C
	INC	E
AFR	DJNZ	AFP
	RET	
AFS	LD	DE,AGD
	JR	AFU
AFT	LD	DE,AGC
AFU	XOR	A
AFV	PUSH	DE
	PUSH	HL
	PUSH	BC
	EX	DE,HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	LD	B,2FH
	POP	HL
AFW	INC	B
	ADD	HL,DE
	ADC	A,C
	JR	C,AFW
	OR	A
	SBC	HL,DE
	SBC	A,C
	EX	(SP),HL
	PUSH	AF
	LD	A,(HL)
	SUB	'0'
	CP	0AH
	INC	HL
	LD	(HL),B
	JR	C,AFX
	LD	A,B
	CP	30H
	JR	NZ,AFX
	LD	(HL),20H
AFX	LD	A,E
	CP	0F6H
	JR	Z,AFY
	POP	AF
	POP	BC
	POP	DE
	INC	DE
	INC	DE
	INC	DE
	JR	AFV
AFY	POP	DE
	POP	BC
	POP	DE
	INC	HL
	LD	A,C
	ADD	A,'0'
	LD	(HL),A
	INC	HL
	RET	
;
*GET	ROUTINES
;
AFZ	DEFW	86A0H	;=100,000
	DEFB	1
AGA	DEFW	-10000
	DEFB	0FFH
AGC	DEFW	-1000
	DEFB	0FFH
AGD	DEFW	-100
	DEFB	0FFH
	DEFW	-10
	DEFB	0FFH
ADM	DEFM	'   '
M_CLS	DEFB	1CH,1FH,03H
M_USAGE	DEFM	'DIR:  Get a disk directory',CR
	DEFM	'Usage: DIR [{0|1|2}] [a] [.ext]',CR
	DEFM	'Eg:    DIR .bas',CR,0
AGL	DEFM	'Drive'
AGM	DEFM	' 000  '
D_NAME	DEFM	'XXXXXXXX  '
D_DATE	DEFM	'MM/DD/YY '
D_TKS	DEFM	' 000 Trks '
D_FDS	DEFM	' 000 Fdes '
D_GRN	DEFM	' 0000 Grans',CR,0
AHA	DEFM	' 000000000 '
AHD	DEFM	' 000'
AHF	DEFM	' 000000 '
AHI	DEFM	' 0000 '
AHJ	DEFM	' 000  '
AHK	DEFM	'SIUEC....'
AHN	DEFM	'U'
AHO	DEFM	'AL',0
COL_HDG	DEFM	'Eof    Lrl   Recs Grans Exts  '
	DEFM	'SIUEC....UAL',CR,0
THIS_PROG_END
	NOP
;
	END	START
