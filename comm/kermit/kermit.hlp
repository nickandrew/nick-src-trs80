This implementation of the Kermit protocol was done by Stan
Barber at Rice University (sob@RICE).  It is compatible with
all DOS's available for the TRS80 Model I or Model III (and
the Model 4 running in Model III mode).  It has been checked
out under the following DOS's: TRSDOS 2.3 (Model I), TRSDOS
1.3 (Model III), NEWDOS/80 V 2.0, LDOS 5.1.3, DOS+ 3.5 and
VTOS 3.0 (Model I).

   Modifications have been done by Nick Andrew on 27-Mar-86 to
 standardize the protocol and improve the code. The version
 released in KER0786/DIR and KER0786/DAT can be assembled for
 any or all of these computers :-

   - System-80
   - Trs-80
   - 6850 ACIA rs-232 (Aterm)
   - 8251 USART rs-232 (Zeta)

   In addition changes were made regarding 8-th bit quoting
 ... the previous version could not handle this in any
 situation.
   In-transmission file conversion was removed because if file
 conversion is REALLY required then it can easily be done
 external to Kermit ... ie don't convert binary files.

   The documentation has been updated for any other changes.

The files are as follows:

TRS80 Name         Description

 COMND/ASM         Command parser
 GET/ASM           RECEIVE & GET command
 KERMIT/ASM        Main source module, calls in others
 KERSTR/ASM        Strings & storage area
 KILLDIR/ASM       Source for KILL & DIR commands
 MORE/ASM          Source for other commands
 SEND/ASM          Source for SEND command
 XFER/ASM          Source common to RECEIVE & SEND
 KERMIT/ASM        User Guide manual chapter
 KERMIT/HLP        Help on installing Kermit (this file)


    The source should be assembled using an assembler capable of conditional assembly. The assembler I used was NEDAS/EDAS. I don't believe any dos-dependant things were inserted in the code however I have only tested using Newdos-80.

    Before assembling, edit KERMIT/ASM and set the flag for which machine you have (either F_TRS80 or F_SYS80). Save your edited copy and assemble with name KERMIT/CMD (or whatever).

    BUGS
    ----

    The original version as supplied by Stan Barber
                      was
                     very
                    buggy.

   There was no provision made for 8'th bit quoting,
or repeat character quoting. A protocol transmission or
reception from a computer without the ability to control the
parity bit would have been disastrous. It stripped bit 7
from certain characters both on transmit and receive. The
filename conversion was buggy and resulted in dos errors.

   I have attempted to remove most or all of these bugs.
Especially those due to 8'th bit quoting and parity. This
version contains the code to do 8'th bit quoting, but will
not unless the other system requests it (I think). A future
version will attempt 8'th bit quoting if parity is set to
any value other than 'NONE'. The reason for this is that in
such a case Kermit cannot transmit characters with bit 7 set
WITHOUT quoting them. And if quoting is desired then parity
can be set to 'SPACE'.

   In addition I have added several conditional assembly
statements to allow use with different RS-232 interfaces.

   BUGS still remaining in this version are (to my knowledge):
   ----
- Previously described inability to decide whether to quote 8.
- DEBUG mode is not robust and will fill the screen with
  garbage on a binary transfer
- Strings are still terminated with the CP/M convention of
  prefixing with a '$' sign. This hurts the DEBUG when a '$'
  is required to be printed. In general, ALWAYS terminate a
  string with a null value (00h).
- This version cannot act as a server (remote mode), only
  as a local kermit.
- The VT-52 emulation mode is apparently not a true VT-52
  emulation.

Nick Andrew,     (sysop, Zeta Rtrs)
30-Jul-86.

