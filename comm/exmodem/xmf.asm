;XmF/asm: Xmodem 1.1 utilising cpu speedup/slowdown
; (Xmodem Ver 1.2 21-Oct-84).
; Modified by Nick Andrew 21-Oct-84.
;
*GET	DOSCALLS

ORIG	EQU	6080H
	ORG	ORIG+80H
RDDATA	EQU	0F8H
WRDATA	EQU	0F8H
RDSTAT	EQU	0F9H
WRSTAT	EQU	0F9H
DAV	EQU	1
CTS	EQU	0
VDUDVR	EQU	0000H
;
ETX	EQU	03H
LF	EQU	0AH
CR	EQU	0DH
;
MESS	PUSH	HL
MESV01	LD	A,(HL)
	CP	ETX
	JR	Z,MESV02
	PUSH	AF
	CALL	ROM@PUT_VDU
	POP	AF
	INC	HL
	JR	MESV01
MESV02	POP	HL
	RET	
;
ACP	DEFM	'Parameter error!',CR
	DEFM	'Must be "R" (receive) or "S" (send).',CR
	DEFB	ETX
ACR	DEFM	'Filename error!',CR,ETX
ACS	DEFM	CR,'>> File transfer aborted! <<',CR,ETX
ACU	DEFM	CR,'Ready to send - '
	DEFM	'awaiting initial NAK...',CR,ETX
ACY	DEFM	CR,'Ready to receive - '
	DEFM	'awaiting SOH byte...',CR,ETX
ADH	DEFM	'File already exists!',CR
	DEFM	'Use another filename. ',CR,ETX
ADR	DEFM	CR,'[File transfer completed]',CR,ETX
ADU	DEFM	CR,'Receiving - Enter filename: ',ETX
ADZ	DEFM	CR,'Sending - Enter Filename:  ',ETX
AEF	DEFM	CR,'Block Number:   ',ETX
;
AEH	LD	HL,ACP	;'Parameter error!'
AEI	CALL	MESS
AEJ	JP	XM_TODOS	;Back to Dos.
AEL	LD	HL,ACR	;'Filename error!'
	CALL	MESS
	JP	AHG
AEN	LD	(MODE),A		;Save S/R mode.
AEO	LD	A,0FFH
	LD	(AHX),A
AEP	INC	HL
	LD	A,(HL)
	CP	' '
	JR	Z,AEP		;Bypass spaces again.
	CP	0DH
AEQ	JP	Z,AET
	LD	A,(MODE)
	CP	'R'
	JP	Z,AEX
AES	JP	AFE
AET	LD	A,(MODE)
	CP	'R'
	JP	Z,AEW
	JP	AFD
	CALL	AEU2
AEW	LD	HL,ADU
	CALL	MESS
	LD	HL,AIL
	LD	B,1FH
	CALL	ROM@WAIT_LINE
	JP	C,AHG
AEX	LD	DE,AIK
	CALL	DOS_EXTRACT
	JP	NZ,AEL
	LD	HL,AIL
	LD	DE,AIK
	LD	B,0H
	CALL	DOS_OPEN_NEW
	JR	Z,AEY
	OR	0C0H
	CALL	DOSERR
	JP	AHG
AEY	JP	C,AEZ
	LD	HL,ADH
	CALL	MESS
	JP	XM_TODOS	;Dos.
AEZ	LD	HL,ACY
	CALL	MESS
	LD	A,15H
	CALL	AHA2
AFA	CALL	AFK
	JP	C,AFC
	CALL	AGQ
	CALL	AGF
	CALL	AFS
	JP	AFA
AFC	CALL	AGR
	CALL	AFS
	CALL	AGG
	JP	AHE
	CALL	AEU2
AFD	LD	HL,ADZ	;'Enter Filename:  '
	CALL	MESS
	LD	HL,AIL	;Read filename into buffer.
	LD	B,1FH
	CALL	ROM@WAIT_LINE	;Read 31 chars.
	JP	C,AHG	;If break hit.
AFE	LD	DE,AIK	;Extract into FCB.
	CALL	DOS_EXTRACT
	JP	NZ,AEL	;If 'Filename error'.
	LD	HL,AIL	;File buffer.
	LD	DE,AIK	;FCB Address.
	LD	B,0H	;LRL=256.
	CALL	DOS_OPEN_EX
	JR	Z,AFF	;If OPEN succeeded.
	OR	0C0H
	CALL	DOSERR
	JP	AHG
AFF	LD	HL,ACU	;'Ready to send'.
	CALL	MESS
	LD	E,50H
	CALL	AHC
AFG	CALL	AGH
	JP	C,AFJ
	CALL	AGF
	XOR	A
	LD	(AIH),A
AFH	CALL	AFT
	CALL	AFU
	CALL	AFW
	CALL	AFX
	JP	C,AFH
	JP	AFG
AFJ	LD	A,4H
	CALL	AHA2
	CALL	AFX
	JP	C,AFJ
	JP	AHE
AFK	XOR	A
	LD	(AIH),A
	LD	(AIE),A
	LD	A,(AIG)
	INC	A
	CALL	AHO
AFL	LD	B,0AH
	CALL	AGW
	JP	C,AFN
	CP	1H
	JP	Z,AFO
	OR	A
	JP	Z,AFL
	CP	4H
	SCF	
	RET	Z
AFM	LD	B,1H
	CALL	AGW
	JP	NC,AFM
	LD	A,15H
	CALL	AHA2
	LD	A,(AIH)
	INC	A
	LD	(AIH),A
	CP	0AH
	JP	C,AFL
	CALL	AGG
	CALL	AHD
AFN	JP	AFM
AFO	LD	B,1H
	CALL	AGW
	JP	C,AFN
	LD	D,A
	LD	B,1H
	CALL	AGW
	JP	C,AFN
	CPL	
	CP	D
	JP	Z,AFP
	JP	AFM
AFP	LD	A,D
	LD	(AIF),A
	LD	A,1H
	LD	(AIE),A
	LD	C,0H
	LD	HL,ORIG
AFQ	LD	B,1H
	CALL	AGW
	JP	C,AFN
	LD	(HL),A
	INC	L
	JP	NZ,AFQ
	XOR	A
	LD	(AIE),A
	LD	D,C
	LD	B,1H
	CALL	AGW
	JP	C,AFN
	CP	D
	JP	NZ,AFM
	LD	A,(AIF)
	LD	B,A
	LD	A,(AIG)
	CP	B
	JP	Z,AFR
	INC	A
	CP	B
	JP	NZ,AGC
	RET	
AFR	CALL	AFS
	JP	AFK
AFS	LD	A,6H
	CALL	AHA2
	RET	
AFT	LD	A,(AIG)
	CALL	AHO
	LD	A,1H
	CALL	AHA2
	LD	A,(AIG)
	CALL	AHA2
	LD	A,(AIG)
	CPL	
	CALL	AHA2
	RET	
AFU	LD	A,1H
	LD	(AIE),A
	LD	C,0H
	LD	HL,ORIG
AFV	LD	A,(HL)
	CALL	AHA2
	INC	L
	JP	NZ,AFV
	XOR	A
	LD	(AIE),A
	RET	
AFW	LD	A,C
	CALL	AHA2
	RET	
AFX	LD	B,0AH
	CALL	AGV
	JP	C,AFZ
	CP	6H
	RET	Z
	CP	18H
	JP	Z,AGC
AFY	LD	A,(AIH)
	INC	A
	LD	(AIH),A
	CP	0AH
	RET	C
	CALL	AHD
AFZ	JP	AFY
AGA	PUSH	AF
	LD	A,(3840H)
	BIT	02H,A
	JR	NZ,AGB
	POP	AF
	RET	
AGB	POP	AF
AGC	LD	SP,(OLDSP)
AGD	LD	B,1H
	CALL	AGW
	JP	NC,AGD
	LD	A,18H
	CALL	AHA2
AGE	LD	B,1H
	CALL	AGW
	JP	NC,AGE
	LD	A,20H
	CALL	AHA2
	CALL	AHD
AGF	LD	A,(AIG)
	INC	A
	LD	(AIG),A
	RET	
AGG	LD	DE,AIK
	CALL	DOS_CLOSE
	RET	Z
	OR	0C0H
	CALL	DOSERR
	JP	AHG
AGH	LD	A,(AIJ)
	DEC	A
	LD	(AIJ),A
	JP	M,AGI
	LD	HL,(AID)
	LD	DE,ORIG
	CALL	AHU
	LD	(AID),HL
	RET	
AGI	LD	A,(AII)
	CP	1H
	SCF	
	RET	Z
	CALL	FAST		;This is the READ loop.
	LD	C,0H
	LD	DE,START
AGJ	LD	B,80H
AGK	PUSH	DE
	LD	DE,AIK
	CALL	ROM@GET
	POP	DE
	JR	Z,AGL
	CP	1CH
	JR	Z,AGM
	OR	0C0H
	CALL	DOSERR
	JP	AGC
AGL	LD	(DE),A
	INC	DE
	DJNZ	AGK
	INC	C
	LD	A,C
	CP	14H
	JP	Z,AGP
	JR	AGJ
AGM	LD	A,B
	CP	80H
	JR	Z,AGO
	XOR	A
AGN	LD	(DE),A
	INC	DE
	DJNZ	AGN
	INC	C
AGO	LD	A,1H
	LD	(AII),A
	LD	A,C
AGP	LD	(AIJ),A
	LD	HL,START
	LD	(AID),HL
	CALL	SLOW
	JP	AGH
AGQ	LD	HL,(AID)
	EX	DE,HL
	LD	HL,ORIG
	CALL	AHU
	EX	DE,HL
	LD	(AID),HL
	LD	A,(AIJ)
	INC	A
	LD	(AIJ),A
	CP	14H
	RET	NZ
AGR	LD	A,(AIJ)
	OR	A
	RET	Z
	LD	C,A
	CALL	FAST
	LD	DE,START
AGS	LD	B,80H
AGT	PUSH	DE
	LD	A,(DE)
	LD	DE,AIK
	CALL	ROM@PUT
	POP	DE
	JR	Z,AGU
	OR	0C0H
	CALL	DOSERR
	JP	AGC
AGU	INC	DE
	DJNZ	AGT
	DEC	C
	JP	NZ,AGS
	XOR	A
	CALL	SLOW
	LD	(AIJ),A
	LD	HL,START
	LD	(AID),HL
	RET	
AGV	NOP
	NOP	;Was 2*(IN A,(EB)).
AGW	PUSH	DE
	DEFW	0
	DEFW	0
AGX	LD	DE,0B000H
	CALL	AGA
AGY	IN	A,(RDSTAT)
	BIT	DAV,A
	JP	NZ,AGZ
	DEC	E
	JP	NZ,AGY
	DEC	D
	JP	NZ,AGY
	DEC	B
	JP	NZ,AGX
	POP	DE
	SCF	
	RET	
AGZ	IN	A,(RDDATA)
	POP	DE
	PUSH	AF
	ADD	A,C
	LD	C,A
	POP	AF
	CALL	AHT
	OR	A
	RET	
AHC	CALL	AGA
	LD	B,1H
	CALL	AGW
	CP	15H
	RET	Z
	CP	18H
	JP	Z,AGC
	DEC	E
	JP	Z,AGC
	JP	AHC
AHD	LD	SP,(OLDSP)
	CALL	AHH
	LD	HL,ACS
	JP	AHF
AHE	LD	SP,(OLDSP)
	CALL	AHH
	LD	HL,ADR
	JP	AHF
AHF	CALL	MESS
	JP	XM_TODOS	;Dos.
AHG	CALL	AHH
	LD	SP,(OLDSP)
	JP	XM_TODOS	;Dos.
AHH	XOR	A
	EI	
	LD	HL,AIF
	LD	B,6H
AHI	LD	(HL),A
	INC	HL
	DJNZ	AHI
	LD	HL,START
	LD	(AID),HL
	CALL	ACL2
	LD	A,0C9H
	LD	(AHO),A
	XOR	A
	LD	(AHJ),A
	LD	HL,(AHZ)
	LD	A,H
	OR	L
	RET	Z
	LD	(VDUDVR),HL
	RET	
AHJ	NOP	
	PUSH	HL
	DEC	A
	LD	(AHY),A
	LD	A,(AHX)
	OR	A
	JR	Z,AHN
	LD	L,96H
AHK	LD	H,0FFH
AHL	DEC	H
	JR	NZ,AHL
	DEC	L
	JR	NZ,AHK
	CALL	AEU2
	LD	HL,(VDUDVR)
	LD	(AHZ),HL
	LD	HL,0458H	;Video driver
AHM	EQU	$-2
	LD	(VDUDVR),HL	;Set VDU driver in
AHN	LD	HL,AEF		;case xm remotely worked.
	CALL	MESS
	LD	A,0C9H
	LD	(AHJ),A
	POP	HL
	RET	
AHO	NOP	
	PUSH	DE
	PUSH	AF
	CALL	AGA
	CALL	AHJ
	POP	AF
	PUSH	AF
	LD	E,A
	LD	A,(AHY)
	CP	E
	CALL	Z,AHP
	LD	A,8H
	CALL	ROM@PUT_VDU
	LD	A,8H
	CALL	ROM@PUT_VDU
	POP	AF
	LD	(AHY),A
	PUSH	AF
	CALL	AHQ
	POP	AF
	CALL	AHR
	POP	DE
	RET	
AHP	PUSH	HL
	LD	HL,AHW
	CALL	MESS
	POP	HL
	RET	
AHQ	RRCA	
	RRCA	
	RRCA	
	RRCA	
AHR	AND	0FH
	CP	0AH
	JR	C,AHS
	ADD	A,7H
AHS	ADD	A,30H
	CALL	ROM@PUT_VDU
	RET	
AHT	JP	AGA
AHU	LD	B,80H		;128 byte block move.
AHV	LD	A,(HL)
	LD	(DE),A
	INC	HL
	INC	DE
	DEC	B
	JP	NZ,AHV
	RET	
AHW	LD	HL,(2020H)
	JR	NZ,AIA
AHX	DEFB	0FFH
AHY	NOP	
AHZ	NOP	
AIA	NOP	
MODE	DEFB	0		;For S/R char.
	DEFS	30
	;All NOPs....
OLDSP	DEFW	0000H
AID	DEFW	START
AIE	NOP	
AIF	NOP	
AIG	NOP	
AIH	NOP	
AII	NOP	
AIJ	NOP	
AIK	DEFS	32	;FCB.
AIL	DEFS	256	;File Buffer...
ACL2	CALL	CONFIG
	RET
AEU2	CALL	CONFIG
	XOR	A
	LD	(AHO),A
	RET
CONFIG	LD	A,82H
	OUT	(WRSTAT),A
	LD	A,40H
	OUT	(WRSTAT),A
	LD	A,0EH
	OUT	(WRSTAT),A
	LD	A,05H
	OUT	(WRSTAT),A
	RET
AHA2	PUSH	AF
	CALL	AHT
	ADD	A,C
	LD	C,A
	POP	AF
	PUSH	AF
AHAV01	IN	A,(RDSTAT)
	BIT	CTS,A
	JR	Z,AHAV01
	POP	AF
	OUT	(WRDATA),A
	RET
;
;Subroutines to set cpu speed.
FAST	PUSH	AF
	LD	A,1
	OUT	(254),A
	POP	AF
	RET
;
SLOW	PUSH	AF
	XOR	A
	OUT	(254),A
	POP	AF
	RET
;
XM_TODOS	CALL	FAST
	JP	DOS_NOERROR
DOSERR	CALL	FAST
	JP	DOS_ERROR
;
START	LD	(OLDSP),SP
	CALL	SLOW
	PUSH	HL
	LD	HL,SIGNON
	CALL	MESS
	LD	DE,721BH
	LD	A,(0054H)		;Decide which machine.
					; According to the decoded ROM page, this is a keyboard lookup map.
	DEC	A
	JR	Z,AIN		;If Model I.
	LD	HL,0473H
	LD	(AHM),HL
	LD	HL,(4411H)	;Himem for Mod/III.
	JR	AIO
AIN	LD	HL,(HIMEM)	;Himem for Mod/I.
AIO	OR	A
	SBC	HL,DE
	POP	HL
	JP	C,AIQ
	DEC	HL
AIP	INC	HL
	LD	A,(HL)
	CP	0DH
	JP	Z,AEH	;Must be least 1 parameter.
	CP	' '	;Bypass spaces.
	JR	Z,AIP
	AND	5FH	;Change to U/c.
	CP	'R'	;For Receive.
	JP	Z,AEN
	CP	'S'	;For Send.
	JP	Z,AEN
	JP	AEH	;Otherwise param error.
AIQ	LD	HL,NOMEM	;Lacking memory.
	CALL	MESS
	JP	DOS_DISP_ERROR	;Error-displayed exit.
;
NOMEM	DEFM	'Insufficient memory for file transfer!'
	DEFB	CR,ETX
SIGNON	DEFM	'XMODEM file transfer utility (XMF)',CR
	DEFM	'Fast Ver. 1.2  21-Oct-84.',CR
	DEFM	'This version switches the CPU speed'
	DEFM	' during operation.',CR,ETX
	END	START
