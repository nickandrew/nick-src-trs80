;hdp/asm: Hex dump of file sectors to printer.
; Version 1.2, 26-Jan-85.
;
*GET	DOSCALLS
;
;Equates...
CR	EQU	0DH
ETX	EQU	03H
NULL	EQU	00H
SPACE	EQU	20H
;Printer equates:
TOF	EQU	0CH
EXPAND	EQU	0EH
NORMAL	EQU	14H
DOT	EQU	174
;
;Printer locations:
PORT	EQU	0FDH
MEMORY	EQU	37E8H
;
	COM	'<Hdp: 1.2, 26-Jan-85>'
	ORG	5200H
	DEFS	100H
ESTACK	DEFB	0
; local variable storage and buffers.
BUFFER	DEFS	100H
FCB	DEFS	20H
FCB_COPY	DEFS	20H
INBUFF	DEFS	20H
;
SECTOR_NO	DEFB	00H
SECT_POSN	DEFB	00H
PFLAG	DEFB	0
HDNG_1	DEFM	EXPAND,'      Hex Dump of ',ETX
HDNG_2	DEFM	EXPAND,'Sector number:  ',ETX
;
START	LD	SP,ESTACK
	LD	A,(HL)
	CP	CR
	JR	NZ,GIVEN
	LD	HL,MESS_FIL
	CALL	MESSAG
	LD	HL,INBUFF
	LD	B,1FH
	CALL	40H		;Get filespec.
	LD	HL,INBUFF
GIVEN	LD	DE,FCB
	CALL	DOS_EXTRACT
	LD	HL,FCB
	LD	DE,FCB_COPY
	LD	BC,32
	LDIR
	LD	DE,FCB
	LD	HL,BUFFER
	LD	B,0
	CALL	DOS_OPEN_EX
	JP	NZ,DOS_ERROR
	CALL	SET_PTR
	XOR	A
	LD	(SECTOR_NO),A
LOOP	CALL	PRT_SECTOR
	JR	Z,LOOP
	LD	DE,FCB
	CALL	DOS_CLOSE
	JP	NZ,DOS_ERROR
	JP	DOS
;
PRT_SECTOR	LD	DE,FCB
	CALL	DOS_READ_SECT
	JR	Z,PRT_1
	CP	1CH
	JP	NZ,DOS_ERROR
	XOR	A
	CP	1
	RET
PRT_1	LD	A,(SECTOR_NO)
	AND	1
	CALL	Z,HEADING
	XOR	A
	LD	(SECT_POSN),A
	CALL	P_SEC_NO
	LD	B,4
PRT_2	PUSH	BC
	CALL	PRINT_4
	LD	A,CR
	CALL	PTR_OUT
	POP	BC
	DJNZ	PRT_2
	LD	B,5
PRT_3	PUSH	BC
	LD	A,CR
	CALL	PTR_OUT
	POP	BC
	DJNZ	PRT_3
	LD	A,(SECTOR_NO)
	INC	A
	LD	(SECTOR_NO),A
	XOR	A
	RET
;
PRINT_4	LD	B,4
PRI_1	PUSH	BC
	CALL	PR_POS
	CALL	PR_LINE
	LD	A,(SECT_POSN)
	ADD	A,10H
	LD	(SECT_POSN),A
	POP	BC
	DJNZ	PRI_1
	RET
;
PR_POS	LD	A,EXPAND
	CALL	PTR_OUT
	LD	A,(SECT_POSN)
	OR	A
	JR	NZ,PR_1
	LD	A,(SECTOR_NO)
	CALL	HEXOUT
	RET
PR_1	LD	A,SPACE
	CALL	PTR_OUT
	CALL	PTR_OUT
	RET
;
SET_PTR	LD	A,(05AFH)
	CP	PORT
;ie. test if sys-80.
	JR	NZ,SET_1
	LD	A,1
	LD	(PFLAG),A
	RET
SET_1	XOR	A
	LD	(PFLAG),A
	RET
;
PTR_OUT	PUSH	AF
	LD	A,(PFLAG)
	OR	A
	JR	Z,PTR_TRS
PTR_1	IN	A,(PORT)
	CP	3FH	;ptr ready
	JR	NZ,PTR_1
	POP	AF
	OUT	(PORT),A
	RET
PTR_TRS	LD	A,(MEMORY)
	CP	3FH
	JR	NZ,PTR_TRS
	POP	AF
	LD	(MEMORY),A
	RET
;
MESSAG	LD	A,(HL)
	CP	ETX
	RET	Z
	PUSH	HL
	CALL	0033H
	POP	HL
	INC	HL
	JR	MESSAG
;
MESS_FIL	DEFM	'Enter filespec: ',ETX
;
HEXOUT	PUSH	AF
	AND	0F0H
	SRL	A
	SRL	A
	SRL	A
	SRL	A
	CALL	HEX1
	POP	AF
	AND	0FH
	CALL	HEX1
	RET
;
HEX1	CP	0AH
	JR	C,HEX1_1
	ADD	A,7
HEX1_1	ADD	A,30H
	CALL	PTR_OUT
	RET
;
HEADING	LD	A,(SECTOR_NO)
	OR	A
	JR	Z,NOTOF
	LD	A,TOF
	CALL	PTR_OUT
NOTOF	LD	HL,HDNG_1
	CALL	MESS_PTR
	LD	HL,FCB_COPY
	CALL	MESS_PTR
	LD	A,0DH
	CALL	PTR_OUT
	CALL	PTR_OUT
;
MESS_PTR	LD	A,(HL)
	CP	ETX
	RET	Z
	CALL	PTR_OUT
	INC	HL
	JR	MESS_PTR
;
P_SEC_NO	LD	HL,HDNG_2
	CALL	MESS_PTR
	LD	A,(SECTOR_NO)
	CALL	DEC_PTR
	LD	A,CR
	CALL	PTR_OUT
	CALL	PTR_OUT
	CALL	PTR_OUT
	RET
;
DEC_PTR	LD	B,100
	CALL	DIGIT
	LD	D,A
	LD	A,C
	CALL	PTR_OUT
	LD	A,D
	LD	B,10
	CALL	DIGIT
	LD	D,A
	LD	A,C
	CALL	PTR_OUT
	LD	B,1
	LD	A,D
	CALL	DIGIT
	LD	A,C
	CALL	PTR_OUT
	RET
;
DIGIT	LD	C,2FH
DIG_1	SUB	B
	INC	C
	JR	NC,DIG_1
	ADD	A,B
	RET
;
PR_LINE	LD	A,(SECT_POSN)
	CALL	HEXOUT
	LD	A,SPACE
	CALL	PTR_OUT
	CALL	PTR_OUT
	LD	A,NORMAL
	CALL	PTR_OUT
	LD	HL,BUFFER
	LD	A,(SECT_POSN)
	LD	E,A
	LD	D,0
	ADD	HL,DE
	PUSH	HL
	LD	B,8
PR_2	PUSH	BC
	LD	A,(HL)
	CALL	HEXOUT
	INC	HL
	LD	A,(HL)
	CALL	HEXOUT
	INC	HL
	LD	A,SPACE
	CALL	PTR_OUT
	CALL	PTR_OUT
	POP	BC
	DJNZ	PR_2
	POP	HL
	LD	B,10H
PR_3	PUSH	BC
	LD	A,(HL)
	CP	20H
	JR	C,PR_4
	CP	7FH
	JR	NC,PR_4
	CALL	PTR_OUT
	JR	PR_5
PR_4	LD	A,DOT
	CALL	PTR_OUT
PR_5	INC	HL
	POP	BC
	DJNZ	PR_3
	LD	A,CR
	CALL	PTR_OUT
	RET
;
	END	START
