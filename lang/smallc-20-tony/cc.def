/*
**	Small-C Compiler Version 2.0
**
**	Copyright 1982, J. E. Hendrix
**
**	Macro Definitions
*/

/*
**	compile options
*/

#define	PHASE2		/* 2nd and later compiles */
#define	SEPARATE	/* compile separately */
#define	OPTIMIZE	/* compile output optimizer */
#define	NOCCARGC	/* no calls to CCARGC */
#define	CMD_LINE	/* command line options */
#define	COL		/* terminate labels with a colon */
#define	TAB	9	/* put out a tab of this value */
#define	LINK		/* will use a linking loader */

/*
**	machine dependent parameters
*/

#define	BPW	2	/* bytes per word */
#define	LBPW	1	/* log2(BPW) */
#define	SBPC	1	/* stack bytes per character */
#define	ERRCODE	7	/* op sys return code */

/*
**	symbol table format
*/

#define	IDENT	0
#define	TYPE	1
#define	CLASS	2
#define	OFFSET	3
#define	NAME	5
#define	OFFSIZE	(NAME-OFFSET)
#define	SYMAVG	10
#define	SYMMAX	14

/*
**	symbol table parameters
*/

#define	NUMLOCS		25
#define	STARTLOC	symtab
#define	ENDLOC		(symtab + (NUMLOCS * SYMAVG))
#define	NUMGLBS		180
#define	STARTGLB	ENDLOC
#define	ENDGLB		(ENDLOC + ((NUMGLBS - 1) * SYMMAX))
#define	SYMTBSZ		2770	/* NUMLOCS * SYMAVG + NUMGLBS * SYMMAX */

/*
**	System wide name size (for symbols)
*/

#define	NAMESIZE	9
#define	NAMEMAX		8

/*
**	possible entries for "IDENT"
*/

#define	LABEL		0
#define	VARIABLE	1
#define	ARRAY		2
#define	POINTER		3
#define	FUNCTION	4

/*
**	possible entries for "TYPE"
**
**	low order 2 bits make type unique within length
**	high order bits give length of object
*/

/*	LABEL		0 */
#define	CCHAR		(1 << 2)
#define	CINT		(BPW << 2)

/*
**	possible entries for "CLASS"
*/

/*	LABEL		0 */
#define	STATIC		1
#define	AUTOMATIC	2
#define	EXTERNAL	3

/*
**	"switch" table
*/

#ifdef	PHASE2
#define	SWSIZ		(2 * BPW)
#define	SWTABSZ		(25 * SWSIZ)
#else
#define	SWSIZ		4
#define	SWTABSZ		100
#endif

/*
**	"while" statement queue
*/

#define	WQTABSZ		30
#define	WQSIZ		3
#define	WQMAX		(wq + WQTABSZ - WQSIZ)

/*
**	entry offsets in while queue
*/

#define	WQSP		0
#define	WQLOOP		1
#define	WQEXIT		2

/*
**	literal pool
*/

#define	LITABSZ		700
#define	LITMAX		(LITABSZ - 1)

/*
**	input line
*/

#define	LINEMAX		80
#define	LINESIZE	81

/*
**	output staging buffer size
*/

#define	STAGESIZE	800
#define	STAGELIMIT	(STAGESIZE - 1)

/*
**	macro (define) pool
*/

#ifdef	HASH
#define	MACNBR		90
#define	MACNSIZE	990	/* 90 * (NAMESIZE + 2) */
#define	MACNEND		(macn + MACNSIZE)
#define	MACQSIZE	450
#else
#define	MACQSIZE	950
#endif
#define	MACMAX		(MACQSIZE - 1)

/*
**	statement types
*/

#define	STIF		1
#define	STWHILE		2
#define	STRETURN        3
#define STBREAK         4
#define STCONT          5
#define STASM           6
#define STEXPR          7
#define STDO            8
#define STFOR		9
#define STSWITCH	10
#define STCASE		11
#define STDEF		12
#define STGOTO		13

#define YES		1
#define NO		0

/*+-+*/
