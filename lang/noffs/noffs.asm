; noffs/asm: shorten multiple 0FF bytes in source
; files to form 'DC  number,0FFH'.
; Version 1.1 06-Feb-85.
;
*GET	DOSCALLS
;
	ORG	5200H
START	LD	DE,FCB_INP
	CALL	DOS_EXTRACT
	LD	DE,FCB_OUT
	CALL	DOS_EXTRACT
;
	LD	HL,INBK_END
	LD	(GET_NEXT),HL
;
	LD	HL,BUF_INP
	LD	DE,FCB_INP
	LD	B,0
	CALL	DOS_OPEN_EX
	JP	NZ,DOS_ERROR
	LD	HL,BUF_OUT
	LD	DE,FCB_OUT
	LD	B,0
	CALL	DOS_OPEN_NEW
	JP	NZ,DOS_ERROR
LOOP	CALL	GET_LINE
	JR	Z,EXIT
	CALL	CHK_FF
	JR	Z,FF_FND
LOOP_2	CALL	PUT_LINE
	JR	LOOP
FF_FND	LD	HL,0
	LD	(NUM_FF),HL
NF_1	LD	HL,(NUM_FF)
	INC	HL
	LD	(NUM_FF),HL
	CALL	GET_LINE
	PUSH	AF
	CALL	Z,WRITE_LINE
	POP	AF
	JR	Z,EXIT
	CALL	CHK_FF
	JR	Z,NF_1
	CALL	WRITE_LINE
	JR	LOOP_2
;
EXIT	LD	A,1AH
	LD	DE,FCB_OUT
	CALL	ROM@PUT
	JP	NZ,DOS_ERROR
	LD	A,0DH
	CALL	ROM@PUT_VDU
	LD	DE,FCB_OUT
	CALL	DOS_CLOSE
	JP	NZ,DOS_ERROR
	LD	DE,FCB_INP
	CALL	DOS_CLOSE
	JP	NZ,DOS_ERROR
	JP	DOS_NOERROR
;
GET_LINE
	CALL	GET_ONE
	JP	NZ,DOS_ERROR
	CP	1AH
	RET	Z
	LD	HL,LINE
	LD	(HL),A
	INC	HL
GL_1	PUSH	HL
	CALL	GET_ONE
	JP	NZ,DOS_ERROR
	POP	HL
	LD	(HL),A
	INC	HL
	CP	0DH
	JR	NZ,GL_1
	OR	A
	RET
;
GET_ONE	LD	HL,(GET_NEXT)
	LD	DE,INBK_END
	RST	18H
	JR	Z,REREAD
	LD	A,(HL)
	INC	HL
	LD	(GET_NEXT),HL
	CP	A
	RET
;
REREAD	LD	HL,IN_BLOCK
	LD	(GET_NEXT),HL
	LD	B,20
RD_LP	PUSH	BC
	PUSH	HL
	LD	DE,FCB_INP
	CALL	DOS_READ_SECT
	POP	DE
	POP	BC
	JR	NZ,ERR_CHK
ERR_OK	PUSH	BC
	LD	HL,BUF_INP
	LD	BC,100H
	LDIR
	EX	DE,HL
	POP	BC
	DJNZ	RD_LP
	JR	GET_ONE
;
ERR_CHK	CP	1CH
	JR	Z,ERR_OK
	CP	1DH
	JR	Z,ERR_OK
	RET
;
GET_NEXT	DEFW	INBK_END
;
CHK_FF	LD	HL,LINE
	LD	DE,FF_TEXT
	LD	B,5
CN_1	LD	A,(DE)
	CP	(HL)
	RET	NZ
	INC	HL
	INC	DE
	DJNZ	CN_1
	RET
;
WRITE_LINE
	LD	HL,DC_TXT_1
	LD	B,4
WL_1	LD	A,(HL)
	CALL	PUT
	INC	HL
	DJNZ	WL_1
	LD	HL,(NUM_FF)
	PUSH	HL
	LD	A,H
	CALL	HEX_2
	POP	HL
	LD	A,L
	CALL	HEX_2
	LD	HL,DC_TXT_2
	LD	B,7
WL_2	LD	A,(HL)
	CALL	PUT
	INC	HL
	DJNZ	WL_2
	LD	A,' '
	CALL	ROM@PUT_VDU
	RET
;
PUT	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	DE,FCB_OUT
	CALL	ROM@PUT
	JP	NZ,DOS_ERROR
	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET
;
HEX_2	PUSH	AF
	AND	0F0H
	SRL	A
	SRL	A
	SRL	A
	SRL	A
	ADD	A,'0'
	CP	'9'+1
	JR	C,H2_1
	ADD	A,7
H2_1	CALL	PUT
	CALL	ROM@PUT_VDU
	POP	AF
	AND	0FH
	ADD	A,'0'
	CP	'9'+1
	JR	C,H2_2
	ADD	A,7
H2_2	CALL	PUT
	CALL	ROM@PUT_VDU
	RET
;
PUT_LINE
	LD	HL,LINE
PL_1	LD	A,(HL)
	PUSH	HL
	LD	DE,FCB_OUT
	CALL	ROM@PUT
	JP	NZ,DOS_ERROR
	POP	HL
	LD	A,(HL)
	INC	HL
	CP	0DH
	JR	NZ,PL_1
	RET
;
DC_TXT_1	DEFM	09H,'DC',09H
DC_TXT_2	DEFM	'H,0FFH',0DH
FF_TEXT	DEFM	09H,'RST',09H,'38H',0DH
NUM_FF	DEFW	0
;
LINE	DEFS	128
;
FCB_INP	DEFS	32
FCB_OUT	DEFS	32
BUF_INP	DEFS	256
BUF_OUT	DEFS	256
;
IN_BLOCK	DEFS	256*20
INBK_END	EQU	$
;
	END	START
